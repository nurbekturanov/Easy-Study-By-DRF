openapi: 3.0.3
info:
  title: EasyStudy API Project
  version: 1.0.0
  description: A sample blog to learn about DRF
paths:
  /api/courses/:
    get:
      operationId: api_courses_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseModule'
          description: ''
  /api/courses/{slug}/:
    get:
      operationId: api_courses_list_2
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
          description: ''
    post:
      operationId: api_courses_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/courses/{slug}/{id}/:
    get:
      operationId: api_courses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    put:
      operationId: api_courses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    patch:
      operationId: api_courses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    delete:
      operationId: api_courses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/courses/{slug}/{id}/modules/:
    get:
      operationId: api_courses_modules_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Module'
          description: ''
    post:
      operationId: api_courses_modules_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Module'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Module'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Module'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
          description: ''
  /api/courses/{slug}/{id}/modules/{id}:
    get:
      operationId: api_courses_modules_list_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Content'
          description: ''
    post:
      operationId: api_courses_modules_create_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Content'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Content'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
  /api/login/:
    post:
      operationId: api_login_create
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/logout/:
    post:
      operationId: api_logout_create
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/news/:
    get:
      operationId: api_news_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/News'
          description: ''
    post:
      operationId: api_news_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/News'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/News'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/News'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
          description: ''
  /api/news/{id}/:
    get:
      operationId: api_news_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this news.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
          description: ''
    put:
      operationId: api_news_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this news.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/News'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/News'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/News'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
          description: ''
    patch:
      operationId: api_news_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this news.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNews'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNews'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNews'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
          description: ''
    delete:
      operationId: api_news_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this news.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/register/:
    post:
      operationId: api_register_create
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/tests/:
    get:
      operationId: api_tests_list
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /api/tests/{slug}/:
    get:
      operationId: api_tests_list_2
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
          description: ''
  /api/tests/{slug}/{id}/:
    get:
      operationId: api_tests_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    put:
      operationId: api_tests_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    patch:
      operationId: api_tests_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    delete:
      operationId: api_tests_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyTokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/user/:
    get:
      operationId: api_user_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
      - slug
    Content:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        module:
          type: integer
        title:
          type: string
          maxLength: 250
        author:
          type: integer
        image:
          type: string
          format: uri
          nullable: true
        file:
          type: string
          format: uri
          nullable: true
        video:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        body:
          type: string
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - author
      - body
      - id
      - module
      - title
    Course:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 150
        description:
          type: string
          maxLength: 250
        body:
          type: string
        image:
          type: string
          format: uri
        video:
          type: string
          format: uri
          nullable: true
        slug:
          type: string
          maxLength: 150
          pattern: ^[-a-zA-Z0-9_]+$
        created_at:
          type: string
          format: date-time
          readOnly: true
        author:
          type: integer
        course_module:
          type: integer
      required:
      - author
      - body
      - course_module
      - created_at
      - description
      - id
      - image
      - slug
      - title
    CourseModule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 150
        description:
          type: string
          maxLength: 250
        slug:
          type: string
          maxLength: 150
          pattern: ^[-a-zA-Z0-9_]+$
        courses:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - courses
      - description
      - id
      - slug
      - title
    Module:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: integer
        title:
          type: string
          maxLength: 200
        description:
          type: string
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - course
      - id
      - title
    MyTokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    News:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 250
        body:
          type: string
        image:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        views_count:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        author:
          type: integer
      required:
      - author
      - body
      - created_at
      - description
      - id
      - image
      - title
      - updated_at
    PatchedCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 150
        description:
          type: string
          maxLength: 250
        body:
          type: string
        image:
          type: string
          format: uri
        video:
          type: string
          format: uri
          nullable: true
        slug:
          type: string
          maxLength: 150
          pattern: ^[-a-zA-Z0-9_]+$
        created_at:
          type: string
          format: date-time
          readOnly: true
        author:
          type: integer
        course_module:
          type: integer
    PatchedNews:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 250
        body:
          type: string
        image:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        views_count:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        author:
          type: integer
    PatchedQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        correct_answer:
          type: string
          maxLength: 255
        choices:
          type: string
          readOnly: true
    Question:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        correct_answer:
          type: string
          maxLength: 255
        choices:
          type: string
          readOnly: true
      required:
      - category
      - choices
      - correct_answer
      - id
      - text
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
